package rules

import com.test.app.client.model.Quote
import com.test.app.kafka.ActionProducer
import com.test.app.client.model.QuoteActionModel
import com.test.app.client.model.QuoteLine
import com.test.app.client.model.ActionType

global ActionProducer actionProducer;
dialect  "java"

rule "Add Shipping fee"
	when
		quote : Quote(totalPrice < 75, shippingFee == 0)
	then
		QuoteActionModel quoteActionModel = new QuoteActionModel();
		quoteActionModel.setQuoteName(quote.getName());
		quoteActionModel.setActionType(ActionType.CHANGESHIPPINGFEE);
        quoteActionModel.setShippingFee(7d);

        actionProducer.send(quoteActionModel);

        System.out.println("rule: add shipping fee fired");
	end
rule "Free Shipping"
	when
		quote: Quote(totalPrice >= 82, shippingFee > 0)
	then
        QuoteActionModel quoteActionModel = new QuoteActionModel();
		quoteActionModel.setQuoteName(quote.getName());
		quoteActionModel.setActionType(ActionType.CHANGESHIPPINGFEE);
		quoteActionModel.setShippingFee(0d);

		actionProducer.send(quoteActionModel);

		System.out.println("rule: free shipping fired");

	end

rule "Change quantity to target total price"
    when
		quote: Quote(targetPrice > 0, targetPrice < totalPrice)
	then
	    QuoteLine quoteLine = quote.getQuoteLines().get(0);
	    QuoteLine updateQuoteLineModel = new QuoteLine();
	    updateQuoteLineModel.setLineNumber(quoteLine.getLineNumber());
	    updateQuoteLineModel.setQuantity(quoteLine.getQuantity() - 1);

        QuoteActionModel quoteActionModel = new QuoteActionModel();
        quoteActionModel.setQuoteName(quote.getName());
		quoteActionModel.setQuoteLine(updateQuoteLineModel);
		quoteActionModel.setActionType(ActionType.CHANGEQUATITY);

		actionProducer.send(quoteActionModel);

		System.out.println("rule: target total price testing fired");

	end